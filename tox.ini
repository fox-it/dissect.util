[tox]
envlist = lint, py3, pypy3
# This version of tox will autoprovision itself and the requirements defined in
# requires if they are not available on the host system. This requires the
# locally installed tox to have a minimum version 3.3.0. This means the names
# of the configuration options are still according to the tox 3.x syntax.
minversion = 4.27.0
# This version of virtualenv will install setuptools version 68.2.2 and pip
# 23.3.1. These versions fully support python projects defined only through a
# pyproject.toml file (PEP-517/PEP-518/PEP-621). This pip version also support
# the proper version resolving with (sub-)dependencies defining dev extra's.
requires = virtualenv>=20.24.6

[pkgenv]
config_settings_get_requires_for_build_wheel = --build-rust=1
config_settings_build_wheel = --build-option=--py-limited-api=cp310

[testenv]
deps =
    pytest-cov
    coverage
dependency_groups = test
commands =
    pytest --basetemp="{envtmpdir}" --import-mode="append" {posargs:--color=yes --cov=dissect --cov-report=term-missing -v tests}
    coverage report
    coverage xml

[testenv:native]
package = wheel
dependency_groups = test
commands =
    pytest --basetemp="{envtmpdir}" --import-mode="append" --force-native {posargs:--color=yes -v tests}

[testenv:benchmark]
deps =
    pytest-benchmark
    pytest-codspeed
dependency_groups = test
passenv =
    CODSPEED_ENV
commands =
    pytest --basetemp="{envtmpdir}" --import-mode="append" -m benchmark {posargs:--color=yes -v tests}

[testenv:build]
package = skip
dependency_groups = build
commands =
    pyproject-build

[testenv:build-native]
package = skip
dependency_groups = build
commands =
    pyproject-build --wheel --config-setting=--build-rust --config-setting=--build-option=--py-limited-api=cp310

[testenv:build-native-inplace]
package = skip
deps =
    setuptools
    setuptools-scm
    setuptools-rust
commands =
    python -c "from setuptools import setup; setup()" build_rust --inplace

[testenv:fix]
package = skip
dependency_groups = lint
commands =
    ruff check --fix dissect tests
    ruff format dissect tests

[testenv:lint]
package = skip
dependency_groups = lint
commands =
    ruff check dissect tests
    ruff format --check dissect tests
    vermin -t=3.10- --no-tips --lint dissect tests

[testenv:docs-build]
allowlist_externals = make
deps =
    sphinx
    sphinx-autoapi
    sphinx_argparse_cli
    sphinx-copybutton
    sphinx-design
    furo
commands =
    make -C tests/_docs clean
    make -C tests/_docs html

[testenv:docs-linkcheck]
allowlist_externals = make
deps = {[testenv:docs-build]deps}
commands =
    make -C tests/_docs clean
    make -C tests/_docs linkcheck
